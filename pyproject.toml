[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "bg-server"
dynamic = ["version"]
description = "an extensible async background server"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
keywords = []
authors = [
  { name = "Trevor Manz", email = "trevor.j.manz@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "portpicker>=1.5.2",
    "uvicorn>=0.21.1",
    "starlette>=0.26.1",
]

[project.urls]
Documentation = "https://github.com/unknown/bg-server#readme"
Issues = "https://github.com/unknown/bg-server/issues"
Source = "https://github.com/unknown/bg-server"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "requests",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/bg_server tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 90

[tool.ruff]
line-length = 90
target-version = "py37"
extend-select = [
    "E",    # style errors
    "F",    # flake8
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.isort]
known-first-party = ["bg_server"]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S101"]

[tool.coverage.run]
source_pkgs = ["bg_server", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
bg_server = ["src/bg_server", "*/bg-server/src/bg_server"]
tests = ["tests", "*/bg-server/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pdm]
